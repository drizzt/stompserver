require 'rubygems'
require 'stomp_server'
require 'optparse'
opts = OptionParser.new

port = 61613
bind = "127.0.0.1"
bind = "localhost"
storage = ".stompserver"
debug = false
queue = 'memory'
qstore = nil
auth = false

opts.on("-p", "--port=PORT", Integer, "Change the port (default: 61613)") {|p| port = p}
opts.on("-b", "--bind=ADDR", String, "Change the binding adapter (default: localhost)") {|a| bind = a}
opts.on("-q", "--queuetype=QUEUETYPE", String, "Queue type (memory|dbm|file) (default: memory)") {|q| queue = q}
opts.on("-s", "--storage=DIR", String, "Change the storage directory (default: .stompserver)") {|s| storage = s}
opts.on("-d", "--debug", String, "Turn on debug messages") {|d| debug = true}
opts.on("-a", "--auth", String, "Require client authorization") {|a| auth = true}
opts.on("-h", "--help", "Show this message") do
  puts opts
  exit
end

puts opts.parse(ARGV)


if debug
  $DEBUG=true
end

EventMachine::run do

  ## Only require bdb_queue.rb if berkeleydb queue storage is specified
  if queue == 'dbm'
    qstore=DBMQueue.new(storage)
  elsif queue == 'file'
    qstore=FileQueue.new(storage)
  else
    qstore=MemoryQueue.new
  end

  # Might want to uncomment this if you are sending large files
  EventMachine::add_periodic_timer 10, proc {GC.start}

  StompServer.setup(qs=qstore,auth_required=auth)
  puts "Stomp Server starting on port #{port}"
  puts "Queue type=#{queue}"
  puts "Queue storage directory=#{storage}" unless queue == 'memory'
  puts "Topic type=memory"
  puts "Client authorization enabled" if auth
  puts "Debug enabled" if debug
  EventMachine.start_server bind, port, StompServer
end
